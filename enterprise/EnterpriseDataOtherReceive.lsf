MODULE EnterpriseDataOtherReceive;

REQUIRE EnterpriseData, LegalEntity;

GROUP body EXTID '=http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.6:Body';
header = DATA LOCAL STRING();

FORM message FORMEXTID 'Message'
PROPERTIES ATTR ='http://www.1c.ru/SSL/Exchange/Message' EXTID 'xmlns:msg', 
                ='http://www.w3.org/2001/XMLSchema' EXTID 'xmlns:xs', 
                ='http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:xsi'
PROPERTIES() header EXTID 'msg:Header'
PROPERTIES ATTR IN body ='http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.6' EXTID 'xmlns:';

META defImportDoc(Ind,DocumentName)
    GROUP vdokumient##Ind EXTID DocumentName;
    GROUP vkliuchievyieSvoistva##Ind EXTID 'КлючевыеСвойства';
    GROUP vorghanizatsiia##Ind EXTID 'Организация' : vkliuchievyieSvoistva##Ind;
    GROUP vobshchiieDannyie##Ind EXTID 'ОбщиеДанные';
    GROUP vbankovskiiSchietOrghanizatsii##Ind EXTID 'БанковскийСчетОрганизации' : vobshchiieDannyie##Ind;
        vssylka##Ind = DATA LOCAL STRING(INTEGER);
        vINN##Ind = DATA LOCAL STRING(INTEGER);
        vnomierSchieta##Ind = DATA LOCAL STRING(INTEGER);
    EXTEND FORM message
    OBJECTS vdokumient##Ind = INTEGER EXTID DocumentName IN body
    OBJECTS vkliuchievyieSvoistva##Ind = INTEGER EXTID 'КлючевыеСвойства'
    PROPERTIES(vdokumient##Ind) IN vkliuchievyieSvoistva##Ind vssylka##Ind EXTID 'Ссылка'
    PROPERTIES(vdokumient##Ind) IN vorghanizatsiia##Ind vINN##Ind EXTID 'ИНН'
    OBJECTS vobshchiieDannyie##Ind = INTEGER EXTID 'ОбщиеДанные'
    PROPERTIES(vdokumient##Ind) IN vbankovskiiSchietOrghanizatsii##Ind vnomierSchieta##Ind EXTID 'НомерСчета'
    FILTERS imported(vdokumient##Ind);
END;

@defImportDoc( 1,'Документ.СБДСРасчетыСКонтрагентами');
@defImportDoc( 2,'Документ.СБДСРасчетыССотрудниками');
@defImportDoc( 3,'Документ.СБДСПеречислениеЗаработнойПлаты');
@defImportDoc( 4,'Документ.СБДСПеречислениеЗаработнойПлатыНаЛицевыеСчета');
@defImportDoc( 5,'Документ.СБДСПереводНаДругойСчет');
@defImportDoc( 6,'Документ.СБДСПрочееСписание');
@defImportDoc( 7,'Документ.СБДСПрочиеРасходы');
@defImportDoc( 8,'Документ.СБДСКонвертацияВалюты');
@defImportDoc( 9,'Документ.СБДСПлатежиВБюджет');
@defImportDoc(10,'Документ.ПБДСРасчетыСКонтрагентами');

// Номер и дата договора при поступлениях от контрагента
GROUP vrasshifrovkaPlatiezha10 EXTID 'РасшифровкаПлатежа';
GROUP vstroka10 EXTID 'Строка' : vrasshifrovkaPlatiezha10;
GROUP vdannyieVzaimoraschietov10 EXTID 'ДанныеВзаиморасчетов' : vstroka10;
GROUP vdoghovor10 EXTID 'Договор' : vdannyieVzaimoraschietov10;
    number10 = DATA LOCAL STRING(INTEGER);
    date10 = DATA LOCAL DATE(INTEGER); 
EXTEND FORM message
OBJECTS vrasshifrovkaPlatiezha10 = INTEGER EXTID 'РасшифровкаПлатежа'
OBJECTS vstroka10 = INTEGER EXTID 'Строка' IN vrasshifrovkaPlatiezha10
OBJECTS vdannyieVzaimoraschietov10 = INTEGER EXTID 'ДанныеВзаиморасчетов' IN vstroka10
PROPERTIES(vdokumient10) IN vdoghovor10 number10 EXTID 'Номер', date10 EXTID 'Дата';

@defImportDoc(11,'Документ.ПБДСПрочееПоступление');
@defImportDoc(12,'Документ.ПБДСРасчетыССотрудниками');
@defImportDoc(13,'Документ.ПБДСПоПлатежнымКартам');
@defImportDoc(14,'Документ.ПБДСКонвертацияВалюты');
@defImportDoc(15,'Документ.ПБДСПрочиеДоходы');


CLASS tempAccount;
uidDocument 'UID документа' = DATA ISTRING[36] (tempAccount);
innCompany 'ИНН компании' = DATA STRING[12]  (tempAccount);
accountNumber 'Номер расчетного счета' = DATA STRING[50] (tempAccount);
contractNumber = DATA STRING[15] (tempAccount);
contractDate = DATA DATE  (tempAccount);


onAddImportAccount (tempAccount o, INTEGER ind,i) {
    IF NOT ind = 10 THEN RETURN ;
    contractNumber(o) <- STRING[15](number10(i));
    contractDate(o) <- date10(i);
}

META onImportAccount(ind)
    onImportAccount##ind(Configuration c) {
        LOCAL a = Account ();
        FOR vssylka##ind(INTEGER i) DO NEW o = tempAccount {
            uidDocument(o) <- ISTRING[36](vssylka##ind(i));
            innCompany(o) <- STRING[12](vINN##ind(i));
            accountNumber(o) <- STRING[50](vnomierSchieta##ind(i));
            onAddImportAccount(o,ind,i);
        }
    } 
END

@onImportAccount(1); 
@onImportAccount(2); 
@onImportAccount(3); 
@onImportAccount(4); 
@onImportAccount(5); 
@onImportAccount(6); 
@onImportAccount(7); 
@onImportAccount(8); 
@onImportAccount(9); 
@onImportAccount(10); 
@onImportAccount(11); 
@onImportAccount(12); 
@onImportAccount(13); 
@onImportAccount(14); 
@onImportAccount(15); 

onClearTempTable () {
    DELETE tempAccount a WHERE a IS tempAccount;
}

onFillTempAccount '' (Configuration c) {
    LOCAL f = XMLFILE ();
    READ receivePath(c) + '.xml' TO f;
    IMPORT message XML FROM f();
    onImportAccount1(c);  onImportAccount2(c);  onImportAccount3(c);  // Расходы
    onImportAccount4(c);  onImportAccount5(c);  onImportAccount6(c);  // Расходы
    onImportAccount7(c);  onImportAccount8(c);  onImportAccount9(c);  // Расходы
    onImportAccount10(c); onImportAccount11(c); onImportAccount12(c); // Приходы
    onImportAccount13(c); onImportAccount14(c); onImportAccount15(c); // Приходы
}   